---
- hosts: localhost
  collections:
  - community.general
  - community.crypto
  become: true
  tasks:
  - name: Set Hostname
    hostname:
      name: k8s-master

  - name: Set up /etc/ansible/hosts
    template:
      src: templates/ansible_hosts.j2
      dest: /etc/ansible/hosts
      backup: yes
    register: netplan

  - name: Refresh inventory
    meta: refresh_inventory

  - name: Set up netplan
    template:
      src: templates/01-eth1.yaml.j2
      dest: /etc/netplan/01-eth1.yaml
      backup: yes
    register: netplan

  - name: Apply netplan
    command: netplan apply
    when: netplan.changed
    
  - name: Update hostsfile
    replace:
      path: /etc/hosts
      regexp: '(\s+)ubuntu(\s+.*)?$'
      replace: '\1k8s-master\2'

  - name: Install sshpass for demo environment
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: 
    vars:
      packages:
      - sshpass

  - name: Ensure .ssh directory exists
    file:
      path: /home/jcluser/.ssh
      state: directory
      owner: jcluser
      group: jcluser
      mode: 0700

  - name: Generate SSH keypair
    become: false
    openssh_keypair:
      path: /home/jcluser/.ssh/id_rsa
      size: 2048
      owner: jcluser
      group: jcluser

  - name: Add sshkey
    authorized_key:
      user: root
      state: present
      key: "{{ lookup('file', '/home/jcluser/.ssh/id_rsa.pub') }}"

  - name: Install packages
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - python3-netaddr

  - name: Add apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Add an apt signing key for Helm
    apt_key:
      url: https://baltocdn.com/helm/signing.asc
      state: present

  - name: Adding apt repository for Helm
    apt_repository:
      repo: deb https://baltocdn.com/helm/stable/debian/ all main
      state: present
      filename: helm-stable.list

  - name: Install Helm
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - helm
  
  - name: Clone kubespray
    become: false
    git:
      repo: 'https://github.com/kubernetes-sigs/kubespray.git'
      version: release-2.20
      dest: /home/jcluser/kubespray
      depth: 1
    register: kubespray_clone
    failed_when:
      - kubespray_clone.failed
      - not 'Local modifications exist in repository' in kubespray_clone.msg

  # This works around
  # http://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:/
  #  cri-o:/1.24/xUbuntu_20.04/
  # missing the cri-o package for the time being.
  - name: Pin k8s version
    become: false
    replace:
      path: /home/jcluser/kubespray/roles/kubespray-defaults/defaults/main.yaml
      regexp: '^kube_version: .*$'
      replace: 'kube_version: v1.23.12'

  - name: Disable node local DNS
    become: false
    replace:
      path: /home/jcluser/kubespray/roles/kubespray-defaults/defaults/main.yaml
      regexp: '^enable_nodelocaldns: true$'
      replace: 'enable_nodelocaldns: false'

  - name: Enable multus
    become: false
    replace:
      path: /home/jcluser/kubespray/roles/kubespray-defaults/defaults/main.yaml
      regexp: '^kube_network_plugin_multus: false$'
      replace: 'kube_network_plugin_multus: true'

  # - name: Setup kubeconfig
  #   command: "{{ item }}"
  #   with_items:
  #    - mkdir -p /home/jcluser/.kube
  #    - cp -i /etc/kubernetes/admin.conf /home/jcluser/.kube/config
  #    - chown -R jcluser:jcluser /home/jcluser/.kube
  #   args:
  #     warn: false
